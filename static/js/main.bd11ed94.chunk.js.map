{"version":3,"sources":["components/home.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","useState","data","photos","setPhotos","onSearch","e","preventDefault","q","query","status","fetch","then","response","json","catch","err","className","onSubmit","type","placeholder","onChange","target","value","onClick","length","map","photo","PhotoItem","title","url","thumbnailUrl","id","src","alt","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAEe,SAASA,EAAKC,GAC3B,MAA4BC,mBAAS,CAAEC,KAAM,KAA7C,mBAAOC,EAAP,KAAeC,EAAf,KAMMC,EAAW,SAACC,GAChBA,EAAEC,iBAEF,IAAIC,EAAIL,EAAOM,MAEN,MAALD,GAAkB,IAALA,IAIjBJ,EAAU,2BAAKD,GAAN,IAAcD,KAAM,GAAIQ,OAAQ,aAEzCC,MAAM,+CAAiDH,EAAI,WACxDI,MAAK,SAAUC,GAEd,OAAOA,EAASC,UAEjBF,MAAK,SAAUV,GAEdE,EAAU,CAAEF,KAAMA,EAAMQ,OAAQ,eAEjCK,OAAM,SAAUC,GAEfZ,EAAU,CAAEF,KAAM,GAAIQ,OAAQ,eAIpC,OACE,sBAAKO,UAAU,MAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,uBAAMC,SAAUb,EAAhB,UACE,uBACEc,KAAK,OACLF,UAAU,SACVG,YAAY,qBACZC,SAtCa,SAACf,GACtBF,EAAU,2BAAKD,GAAN,IAAcM,MAAOH,EAAEgB,OAAOC,YAuCjC,wBAAQC,QAASnB,EAAjB,6BAIJ,qBAAKY,UAAU,eAAf,SACoB,MAAjBd,EAAOO,OACN,4GACmB,WAAjBP,EAAOO,OACT,qEACmB,SAAjBP,EAAOO,OACT,gGACwB,GAAtBP,EAAOD,KAAKuB,OACd,mFAEA,qBAAKR,UAAU,YAAf,SACGd,EAAOD,KAAKwB,KAAI,SAACC,GAAD,OACf,cAACC,EAAD,CAAWC,MAAOF,EAAME,MAAOC,IAAKH,EAAMI,cAAmBJ,EAAMK,cASjF,SAASJ,EAAU5B,GACjB,IAAQ6B,EAAe7B,EAAf6B,MAAOC,EAAQ9B,EAAR8B,IAEf,OACE,sBAAKb,UAAU,gBAAf,UACE,qBAAKA,UAAU,cAAcgB,IAAKH,EAAKI,IAAKL,IAC5C,4BAAIA,OCnEKM,MANf,WACE,OACE,cAACpC,EAAD,KCOWqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bd11ed94.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Home(props) {\n  const [photos, setPhotos] = useState({ data: [] });\n\n  const onSearchChange = (e) => {\n    setPhotos({ ...photos, query: e.target.value });\n  };\n\n  const onSearch = (e) => {\n    e.preventDefault();\n\n    var q = photos.query;\n\n    if (q == null || q == \"\") {\n      return;\n    }\n\n    setPhotos({ ...photos, data: [], status: \"loading\" });\n\n    fetch(\"https://jsonplaceholder.typicode.com/albums/\" + q + \"/photos\")\n      .then(function (response) {\n        // The API call was successful!\n        return response.json();\n      })\n      .then(function (data) {\n        // This is the JSON from response\n        setPhotos({ data: data, status: \"success\" });\n      })\n      .catch(function (err) {\n        // There was an error loading photos\n        setPhotos({ data: [], status: \"error\" });\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"search-wrapper\">\n        <form onSubmit={onSearch}>\n          <input\n            type=\"text\"\n            className=\"search\"\n            placeholder=\"Search by album ID\"\n            onChange={onSearchChange}\n          />\n          <button onClick={onSearch}>Get photos</button>\n        </form>\n      </div>\n\n      <div className=\"list-wrapper\">\n        {photos.status == null ? (\n          <p>Write album ID and click the button or press enter to get all album photos.</p>\n        ) : photos.status == \"loading\" ? (\n          <p>Loading album photos, please wait...</p>\n        ) : photos.status == \"error\" ? (\n          <p>There is an error while loading album photos, try search again.</p>\n        ) : photos.data.length == 0 ? (\n          <p>No photos found for your album ID, try another ID.</p>\n        ) : (\n          <div className=\"container\">\n            {photos.data.map((photo) => (\n              <PhotoItem title={photo.title} url={photo.thumbnailUrl} key={photo.id} />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction PhotoItem(props) {\n  const { title, url } = props;\n\n  return (\n    <div className=\"album-wrapper\">\n      <img className=\"album-image\" src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}\n","import './App.css';\nimport Home from './components/home'\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}